// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ShipRole - The registered role of the ship
type ShipRole string

const (
	ShipRoleFabricator  ShipRole = "FABRICATOR"
	ShipRoleHarvester   ShipRole = "HARVESTER"
	ShipRoleHauler      ShipRole = "HAULER"
	ShipRoleInterceptor ShipRole = "INTERCEPTOR"
	ShipRoleExcavator   ShipRole = "EXCAVATOR"
	ShipRoleTransport   ShipRole = "TRANSPORT"
	ShipRoleRepair      ShipRole = "REPAIR"
	ShipRoleSurveyor    ShipRole = "SURVEYOR"
	ShipRoleCommand     ShipRole = "COMMAND"
	ShipRoleCarrier     ShipRole = "CARRIER"
	ShipRolePatrol      ShipRole = "PATROL"
	ShipRoleSatellite   ShipRole = "SATELLITE"
	ShipRoleExplorer    ShipRole = "EXPLORER"
	ShipRoleRefinery    ShipRole = "REFINERY"
)

func (e ShipRole) ToPointer() *ShipRole {
	return &e
}

func (e *ShipRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FABRICATOR":
		fallthrough
	case "HARVESTER":
		fallthrough
	case "HAULER":
		fallthrough
	case "INTERCEPTOR":
		fallthrough
	case "EXCAVATOR":
		fallthrough
	case "TRANSPORT":
		fallthrough
	case "REPAIR":
		fallthrough
	case "SURVEYOR":
		fallthrough
	case "COMMAND":
		fallthrough
	case "CARRIER":
		fallthrough
	case "PATROL":
		fallthrough
	case "SATELLITE":
		fallthrough
	case "EXPLORER":
		fallthrough
	case "REFINERY":
		*e = ShipRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ShipRole: %v", v)
	}
}
