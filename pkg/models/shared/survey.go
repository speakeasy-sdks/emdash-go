// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SurveySize - The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted.
type SurveySize string

const (
	SurveySizeSmall    SurveySize = "SMALL"
	SurveySizeModerate SurveySize = "MODERATE"
	SurveySizeLarge    SurveySize = "LARGE"
)

func (e SurveySize) ToPointer() *SurveySize {
	return &e
}

func (e *SurveySize) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SMALL":
		fallthrough
	case "MODERATE":
		fallthrough
	case "LARGE":
		*e = SurveySize(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SurveySize: %v", v)
	}
}

// Survey - A resource survey of a waypoint, detailing a specific extraction location and the types of resources that can be found there.
type Survey struct {
	// A list of deposits that can be found at this location.
	Deposits []SurveyDeposit `json:"deposits"`
	// The date and time when the survey expires. After this date and time, the survey will no longer be available for extraction.
	Expiration time.Time `json:"expiration"`
	// A unique signature for the location of this survey. This signature is verified when attempting an extraction using this survey.
	Signature string `json:"signature"`
	// The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted.
	Size SurveySize `json:"size"`
	// The symbol of the waypoint that this survey is for.
	Symbol string `json:"symbol"`
}
