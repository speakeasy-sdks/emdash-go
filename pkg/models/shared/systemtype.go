// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SystemType - The type of waypoint.
type SystemType string

const (
	SystemTypeNeutronStar SystemType = "NEUTRON_STAR"
	SystemTypeRedStar     SystemType = "RED_STAR"
	SystemTypeOrangeStar  SystemType = "ORANGE_STAR"
	SystemTypeBlueStar    SystemType = "BLUE_STAR"
	SystemTypeYoungStar   SystemType = "YOUNG_STAR"
	SystemTypeWhiteDwarf  SystemType = "WHITE_DWARF"
	SystemTypeBlackHole   SystemType = "BLACK_HOLE"
	SystemTypeHypergiant  SystemType = "HYPERGIANT"
	SystemTypeNebula      SystemType = "NEBULA"
	SystemTypeUnstable    SystemType = "UNSTABLE"
)

func (e SystemType) ToPointer() *SystemType {
	return &e
}

func (e *SystemType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEUTRON_STAR":
		fallthrough
	case "RED_STAR":
		fallthrough
	case "ORANGE_STAR":
		fallthrough
	case "BLUE_STAR":
		fallthrough
	case "YOUNG_STAR":
		fallthrough
	case "WHITE_DWARF":
		fallthrough
	case "BLACK_HOLE":
		fallthrough
	case "HYPERGIANT":
		fallthrough
	case "NEBULA":
		fallthrough
	case "UNSTABLE":
		*e = SystemType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SystemType: %v", v)
	}
}
