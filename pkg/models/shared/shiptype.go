// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ShipType string

const (
	ShipTypeShipProbe             ShipType = "SHIP_PROBE"
	ShipTypeShipMiningDrone       ShipType = "SHIP_MINING_DRONE"
	ShipTypeShipInterceptor       ShipType = "SHIP_INTERCEPTOR"
	ShipTypeShipLightHauler       ShipType = "SHIP_LIGHT_HAULER"
	ShipTypeShipCommandFrigate    ShipType = "SHIP_COMMAND_FRIGATE"
	ShipTypeShipExplorer          ShipType = "SHIP_EXPLORER"
	ShipTypeShipHeavyFreighter    ShipType = "SHIP_HEAVY_FREIGHTER"
	ShipTypeShipLightShuttle      ShipType = "SHIP_LIGHT_SHUTTLE"
	ShipTypeShipOreHound          ShipType = "SHIP_ORE_HOUND"
	ShipTypeShipRefiningFreighter ShipType = "SHIP_REFINING_FREIGHTER"
)

func (e ShipType) ToPointer() *ShipType {
	return &e
}

func (e *ShipType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SHIP_PROBE":
		fallthrough
	case "SHIP_MINING_DRONE":
		fallthrough
	case "SHIP_INTERCEPTOR":
		fallthrough
	case "SHIP_LIGHT_HAULER":
		fallthrough
	case "SHIP_COMMAND_FRIGATE":
		fallthrough
	case "SHIP_EXPLORER":
		fallthrough
	case "SHIP_HEAVY_FREIGHTER":
		fallthrough
	case "SHIP_LIGHT_SHUTTLE":
		fallthrough
	case "SHIP_ORE_HOUND":
		fallthrough
	case "SHIP_REFINING_FREIGHTER":
		*e = ShipType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ShipType: %v", v)
	}
}
