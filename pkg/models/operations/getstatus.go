// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetStatus200ApplicationJSONAnnouncements struct {
	Body  string `json:"body"`
	Title string `json:"title"`
}

type GetStatus200ApplicationJSONLeaderboardsMostCredits struct {
	AgentSymbol string `json:"agentSymbol"`
	Credits     int64  `json:"credits"`
}

type GetStatus200ApplicationJSONLeaderboardsMostSubmittedCharts struct {
	AgentSymbol string `json:"agentSymbol"`
	ChartCount  int64  `json:"chartCount"`
}

type GetStatus200ApplicationJSONLeaderboards struct {
	MostCredits         []GetStatus200ApplicationJSONLeaderboardsMostCredits         `json:"mostCredits"`
	MostSubmittedCharts []GetStatus200ApplicationJSONLeaderboardsMostSubmittedCharts `json:"mostSubmittedCharts"`
}

type GetStatus200ApplicationJSONLinks struct {
	Name string `json:"name"`
	URL  string `json:"url"`
}

type GetStatus200ApplicationJSONServerResets struct {
	// How often we intend to reset the game server.
	Frequency string `json:"frequency"`
	// The date and time when the game server will reset.
	Next string `json:"next"`
}

type GetStatus200ApplicationJSONStats struct {
	Agents    int64 `json:"agents"`
	Ships     int64 `json:"ships"`
	Systems   int64 `json:"systems"`
	Waypoints int64 `json:"waypoints"`
}

// GetStatus200ApplicationJSON - OK
type GetStatus200ApplicationJSON struct {
	Announcements []GetStatus200ApplicationJSONAnnouncements `json:"announcements"`
	Description   string                                     `json:"description"`
	Leaderboards  GetStatus200ApplicationJSONLeaderboards    `json:"leaderboards"`
	Links         []GetStatus200ApplicationJSONLinks         `json:"links"`
	// The date and time when the game server was last reset.
	ResetDate    string                                  `json:"resetDate"`
	ServerResets GetStatus200ApplicationJSONServerResets `json:"serverResets"`
	Stats        GetStatus200ApplicationJSONStats        `json:"stats"`
	// The current status of the game server.
	Status string `json:"status"`
	// The current version of the API.
	Version string `json:"version"`
}

type GetStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetStatus200ApplicationJSONObject *GetStatus200ApplicationJSON
}
