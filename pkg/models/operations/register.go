// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"SpaceTraders/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
)

// RegisterRequestBodyFaction - The faction you choose determines your headquarters.
type RegisterRequestBodyFaction string

const (
	RegisterRequestBodyFactionCosmic   RegisterRequestBodyFaction = "COSMIC"
	RegisterRequestBodyFactionVoid     RegisterRequestBodyFaction = "VOID"
	RegisterRequestBodyFactionGalactic RegisterRequestBodyFaction = "GALACTIC"
	RegisterRequestBodyFactionQuantum  RegisterRequestBodyFaction = "QUANTUM"
	RegisterRequestBodyFactionDominion RegisterRequestBodyFaction = "DOMINION"
)

func (e RegisterRequestBodyFaction) ToPointer() *RegisterRequestBodyFaction {
	return &e
}

func (e *RegisterRequestBodyFaction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COSMIC":
		fallthrough
	case "VOID":
		fallthrough
	case "GALACTIC":
		fallthrough
	case "QUANTUM":
		fallthrough
	case "DOMINION":
		*e = RegisterRequestBodyFaction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterRequestBodyFaction: %v", v)
	}
}

type RegisterRequestBody struct {
	// Your email address. This is used if you reserved your call sign between resets.
	Email *string `json:"email,omitempty"`
	// The faction you choose determines your headquarters.
	Faction RegisterRequestBodyFaction `json:"faction"`
	// How other agents will see your ships and information.
	Symbol string `json:"symbol"`
}

type Register201ApplicationJSONData struct {
	Agent    shared.Agent    `json:"agent"`
	Contract shared.Contract `json:"contract"`
	Faction  shared.Faction  `json:"faction"`
	// A ship
	Ship shared.Ship `json:"ship"`
	// A Bearer token for accessing secured API endpoints.
	Token string `json:"token"`
}

// Register201ApplicationJSON - OK
type Register201ApplicationJSON struct {
	Data Register201ApplicationJSONData `json:"data"`
}

type RegisterResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Register201ApplicationJSONObject *Register201ApplicationJSON
}
